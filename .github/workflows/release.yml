# .github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            bin_name: proxmox_monitor
          - target: x86_64-apple-darwin
            os: macos-latest
            bin_name: proxmox_monitor
          - target: aarch64-apple-darwin
            os: macos-latest
            bin_name: proxmox_monitor
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            bin_name: proxmox_monitor.exe

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install musl-tools (Linux)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt update
          sudo apt install -y musl-tools

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Copy binary to dist
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${{ matrix.bin_name }} dist/
        if: matrix.os != 'windows-latest'

      - name: Copy binary to dist (Windows)
        run: |
          mkdir dist
          Move-Item target/${{ matrix.target }}/release/${{ matrix.bin_name }} dist/
        if: matrix.os == 'windows-latest'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/
          retention-days: 7
          if-no-files-found: error

  # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏ –ø—É–±–ª–∏–∫—É–µ–º —Ä–µ–ª–∏–∑
  upload-release:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write  # –Ω—É–∂–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten and rename binaries
        run: |
          mkdir -p release
          find artifacts -name "proxmox_monitor*" -exec cp {} release/ \;
          cd release
          mv proxmox_monitor* ../proxmox-monitor-linux-x64 2>/dev/null || true
          mv proxmox_monitor* ../proxmox-monitor-macos-x64 2>/dev/null || true
          mv proxmox_monitor* ../proxmox-monitor-macos-arm64 2>/dev/null || true
          mv proxmox_monitor.exe* ../proxmox-monitor-windows-x64.exe 2>/dev/null || true
          cd ..

      - name: Create ZIP
        run: |
          zip proxmox-monitor-v${{ github.ref_name }}.zip \
            proxmox-monitor-linux-x64 \
            proxmox-monitor-macos-x64 \
            proxmox-monitor-macos-arm64 \
            proxmox-monitor-windows-x64.exe || true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            üéâ –ü–µ—Ä–≤—ã–π —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —Ä–µ–ª–∏–∑ `proxmox-monitor`!

            ## ‚ú® –ß—Ç–æ –Ω–æ–≤–æ–≥–æ
            - CLI –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Proxmox VE
            - Prometheus Exporter
            - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ Docker –∏ Helm
            - Grafana Dashboard
            - Alerting Rules
            - –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

            ## üì¶ –°–∫–∞—á–∞—Ç—å
            –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã:
            - `proxmox-monitor-linux-x64`
            - `proxmox-monitor-macos-x64`
            - `proxmox-monitor-macos-arm64`
            - `proxmox-monitor-windows-x64.exe`

            –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏ —á–µ—Ä–µ–∑ Cargo:
            ```bash
            cargo install --git https://github.com/Trytonottry/proxmox_monitor
            ```

            ## üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
            üëâ https://trytonottry.github.io/proxmox-monitor/

            ## üê≥ Docker
            ```bash
            docker run ghcr.io/trytonottry/proxmox-monitor:latest --help
            ```
          files: proxmox-monitor-v${{ github.ref_name }}.zip
          generate_release_notes: false
